spring:
  application:
    name: "Ocean Current API"
  config:
    import:
      - optional:file:.env[.properties]
      - classpath:/config/products.yaml
  datasource:
    url: jdbc:sqlite:data/sqlite/index.db
    driver-class-name: org.sqlite.JDBC
  jpa:
    database-platform: org.hibernate.community.dialect.SQLiteDialect
    hibernate:
      ddl-auto: none
    show-sql: false
    open-in-view: false
    properties:
      hibernate:
        hbm2ddl:
          halt_on_error: false
        jdbc:
          batch_size: 20

server:
  port: 8080
  servlet:
    context-path: /api/v1

management:
  health:
    elasticsearch:
      enabled: false
  endpoints:
    web:
      base-path: /manage
      exposure:
        include: "health,info,env,beans,logfile"

elasticsearch:
  host: ${ES_HOST:placeholder}
  api-key: ${ES_API_KEY:placeholder}
  max-result-window: ${ES_MAX_RESULT_WINDOW:20000}
  indexing:
    cron:
      expression: 0 0 2 * * ? # every day at 2 AM in Australia/Hobart time
    s3:
      cron:
        expression: 0 30 2 * * ? # every day at 2:30 AM in Australia/Hobart time

remote:
  json:
    base-url: ${REMOTE_JSON_BASE_URL:}

aws:
  region: ${AWS_S3_REGION:ap-southeast-2}
  access-key-id: ${AWS_ACCESS_KEY_ID:}
  secret-access-key: ${AWS_SECRET_ACCESS_KEY:}
  s3:
    bucket-name: ${AWS_S3_BUCKET_NAME:}
    waves-prefix: WAVES/
    max-keys-per-request: ${AWS_S3_MAX_KEYS_PER_REQUEST:1000}

sqlite:
  remote-url: ${SQLITE_REMOTE_URL:}
  local-path: data/sqlite/index.db
  download:
    cron:
      expression: 0 0 */2 * * ? # every 2 hours
    connect-timeout: 30000
    read-timeout: 60000
